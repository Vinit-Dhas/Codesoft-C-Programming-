#include <iostream>
#include <vector>

using namespace std;

// Function to print the Tic Tac Toe board
void printBoard(const vector<vector<char>>& board) {
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3; ++j) {
            cout << board[i][j] << " ";
        }
        cout << endl;
    }
}

// Function to check if there's a winner
char checkWinner(const vector<vector<char>>& board) {
    // Check rows and columns
    for (int i = 0; i < 3; ++i) {
        if (board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][0] != ' ')
            return board[i][0];
        if (board[0][i] == board[1][i] && board[1][i] == board[2][i] && board[0][i] != ' ')
            return board[0][i];
    }

    // Check diagonals
    if (board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[0][0] != ' ')
        return board[0][0];
    if (board[0][2] == board[1][1] && board[1][1] == board[2][0] && board[0][2] != ' ')
        return board[0][2];

    return ' '; // If no winner yet
}

int main() {
    vector<vector<char>> board(3, vector<char>(3, ' ')); // Initialize empty board

    cout << "Welcome to Tic Tac Toe!\n";
    cout << "Player 1 (X) - Player 2 (O)\n\n";

    int row, col;
    char currentPlayer = 'X';
    char winner = ' ';

    // Game loop
    for (int moves = 0; moves < 9 && winner == ' '; ++moves) {
        // Print the board
        cout << "Current board:\n";
        printBoard(board);

        // Get player's move
        cout << "Player " << currentPlayer << ", enter your move (row and column): ";
        cin >> row >> col;

        // Check if the chosen cell is valid and empty
        if (row < 0 || row >= 3 || col < 0 || col >= 3 || board[row][col] != ' ') {
            cout << "Invalid move! Try again.\n";
            --moves; // Repeat this turn
            continue;
        }

        // Set the player's move on the board
        board[row][col] = currentPlayer;

        // Check for a winner
        winner = checkWinner(board);

        // Switch player
        currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
    }

    // Print the final board
    cout << "Final board:\n";
    printBoard(board);

    // Print the result
    if (winner != ' ')
        cout << "Player " << winner << " wins!\n";
    else
        cout << "It's a draw!\n";

    return 0;
}
